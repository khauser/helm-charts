# Default values for pwa-main.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

pwa_ssr:
  replicaCount: 1
  image:
    repository: intershophub/intershop-pwa-ssr
    tag: latest
    pullPolicy: Always

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  upstream:
    icmBaseURL: https://www.example.com
    ## @param cdnPrefixURL The base URL of your CDN
    ## E.g:
    ## cdnPrefixURL: "https://www.example.com"
    cdnPrefixURL: ""

  ####
  ## @param extraEnvVars Extra environment variables to be set on NGINX containers
  ## E.g:
  ##  extraEnvVars:
  ##    - name: "MULTI_CHANNEL"
  ##      value: |-
  ##        .+:
  ##          - baseHref: /en
  ##            channel: default
  ##            lang: en_US
  ##          - baseHref: /de
  ##            channel: default
  ##            lang: de_DE
  ##    - name: "FOO"
  ##      value: "BAR"
  extraEnvVars: []

  service:
    type: ClusterIP
    port: 4200

  livenessProbe: {}
    # exec:
    #   command:
    #   - /bin/sh
    #   - -c
    #   - netstat -an | egrep 4200.*LISTEN | grep 4200
    # initialDelaySeconds: 10
    # periodSeconds: 30

  readinessProbe: {}
    # exec:
    #   command:
    #   - /bin/sh
    #   - -c
    #   - netstat -an | egrep 4200.*LISTEN | grep 4200
    # initialDelaySeconds: 10
    # periodSeconds: 30

  podAnnotations: {}

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: ""

  nodeSelector: {}

  tolerations: []

  affinity: {}


pwa_nginx:

  replicaCount: 1

  image:
    repository: intershophub/intershop-pwa-nginx
    tag: latest
    pullPolicy: Always

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  ####
  ## @param NGinx ignore query parameters during caching
  ##   cacheIgnoreParams: |-
  ##     params:
  ##     - utm_source
  ##     - utm_campaign
  ##     - utm_medium
  ##     - utm_content
  ##     - utm_term
  ##     - utm_adgroup
  ##     - utm_id
  ##     - gclid
  ##     - gclsrc
  ##     - dclid
  ##     - fbclid
  ##     - gbraid
  ##     - wbraid
  ##     - _gac
  ##     - _gcl
  ##     - epik
  ##     - code
  ##     - state
  ##     - session_state
  cacheIgnoreParams: ""

  ####
  ## @param Multi channel/site configuration object
  ##  multiChannel: |-
  ##    .+:
  ##      - baseHref: /en
  ##        channel: default
  ##        lang: en_US
  ##      - baseHref: /de
  ##        channel: default
  ##        lang: de_DE
  ##      - baseHref: /fr
  ##        channel: default
  ##        lang: fr_FR
  ##      - baseHref: /b2b
  ##        channel: default
  ##        theme: blue
  multiChannel: ""

  ####
  ## @param extraEnvVars Extra environment variables to be set on NGINX containers
  ## E.g:
  ##  extraEnvVars:
  ##    - name: "MULTI_CHANNEL"
  ##      value: |-
  ##        .+:
  ##          - baseHref: /en
  ##            channel: default
  ##            lang: en_US
  ##          - baseHref: /de
  ##            channel: default
  ##            lang: de_DE
  ##    - name: "FOO"
  ##      value: "BAR"
  extraEnvVars: []

  service:
    type: ClusterIP
    port: 4200

  podAnnotations: {}

  ## NGINX containers' resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param resources.limits The resources limits for the NGINX container
  ## @param resources.requests The requested resources for the NGINX container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 100m
    ##    memory: 128Mi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 100m
    ##    memory: 128Mi
    requests: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  livenessProbe: {}

  readinessProbe: {}

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: nginx
    # traefik.ingress.kubernetes.io/frontend-entry-points: https,http
  paths: ['/']
  hosts:
    - host: pwa-main.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
