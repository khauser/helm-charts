name: Create Release Branch
# creates a release branch, creates a PR and bumps all versions as specified
on:
  workflow_dispatch:

jobs:
  find-charts-to-release:
    runs-on: ubuntu-latest
    outputs:
      modified-charts-files: ${{ steps.list-changed-charts.outputs.all_modified_files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get last SHA
        id: last_tagged_sha
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          last_tag=$(git describe --abbrev=0 --tags)
          sha=$(git rev-list -n 1 $last_tag)
          
          echo "sha=$sha" >> $GITHUB_OUTPUT
        
      - name: Get list of changed charts
        id: list-changed-charts
        uses: tj-actions/changed-files@v1.1.3
        with:
          dir_names_max_depth: 2
          sha: ${{ steps.last_tagged_sha.outputs.sha }}
          files: |
            charts/**
  release:
    needs:
    - find-charts-to-release
    permissions:
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with: #fetch all commits, not just the last one
        fetch-depth: 0
    - name: Check
      run: |
        changed_directories=$(echo ${{ needs.find-charts-to-release.outputs.modified-charts-files }} | awk -F'/' '{print $2, $4}')
        # Entferne Duplikate, indem das Array in ein assoziatives Array konvertiert wird
        declare -A unique_changed_directories
        for dir in "${changed_directories[@]}"; do
          unique_changed_directories["$dir"]=1
        done
        
        echo "unique_changed_directories: ${unique_changed_directories}"
#    - name: Bump versions
#      uses: ./.github/template/bump-version
#      with:
#        changes: ${{ inputs.changes }}
#    - name: Create commits
#      run: |
#        git config user.name "$GITHUB_ACTOR"
#        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
#        git add -A
#        git commit -m "chore: bump versions ${{ inputs.changes }} and dependent charts"
#    - name: Reset main branch with changes from develop/?
#      run: |
#        git checkout main
#        git reset --hard ${{ github.ref_name }}
#    - name: Create Release Branch & PR
#      id: pr
#      uses: peter-evans/create-pull-request@v5
#      with: # commits all changes and creates the release branch and PR. If one already exists, it is updated.
#        token: ${{ secrets.PR_CREATOR_TOKEN }}
#        branch: release/${{ github.ref_name }}
#        base: main
#        title: Release ${{ inputs.changes }}
#        commit-message: "release: ${{ inputs.changes }} and dependent charts"
#        delete-branch: true
#        labels: automated pr
